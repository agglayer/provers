syntax = "proto3";

package agglayer.prover.v1;

// Service for generating pessimistic proof.
service PessimisticProofService {
  // Triggers a pessimistic-proof generation for a given batch header and initial state.
  rpc GenerateProof(GenerateProofRequest) returns (GenerateProofResponse);
}

// Type used to request a pessimistic proof generation.
message GenerateProofRequest {
  // The initial state of the network used to generate the pessimistic proof.
  bytes initial_state = 1;
  // The batch header for which the proof is generated.
  bytes batch_header = 2;
}

// Type used as response to a pessimistic proof generation.
message GenerateProofResponse {
  // The generated proof.
  bytes proof = 1;
}

// The kind of error that occurred and that are reported by the service.
enum ErrorKind {
  // Unspecified error.
  ERROR_KIND_UNSPECIFIED = 0;
  // The prover was unable to execute.
  ERROR_KIND_UNABLE_TO_EXECUTE_PROVER = 1;
  // The prover failed to generate the proof
  ERROR_KIND_PROVER_FAILED = 2;
  // The generated proof failed to be verified.
  ERROR_KIND_PROOF_VERIFICATION_FAILED = 3;
  // The executor failed during the proof generation.
  ERROR_KIND_EXECUTOR_FAILED = 4;
}

// Error message returned when an error occurs during proof generation.
message GenerateProofError {
  // The error message as bytes.
  bytes error = 1;
  // The kind of error that occurred.
  ErrorKind error_type = 2;
}
